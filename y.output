   0  $accept : start $end

   1  start : program

   2  program : program function
   3          | function

   4  $$1 :

   5  function : NAME $$1 '(' optparlist ')' '{' decls exprs '}'

   6  parlist : NAME
   7          | parlist ',' NAME

   8  optparlist :
   9             | parlist

  10  decls :
  11        | decls decl ';'

  12  decl : decl ',' NAME
  13       | VAR NAME

  14  exprs : expr ';'
  15        | exprs expr ';'

  16  expr : RETURN expr
  17       | NAME '=' expr
  18       | binopexpr

  19  binopexpr : smallexpr
  20            | binopexpr OPNAME smallexpr

  21  smallexpr : NAME
  22            | NAME '(' optexpr ')'
  23            | OPNAME smallexpr
  24            | LITERAL
  25            | '(' expr ')'
  26            | IF expr body elseifexpr elseexpr
  27            | WHILE expr body

  28  optexpr :
  29          | nonemptyoptexpr

  30  nonemptyoptexpr : expr
  31                  | nonemptyoptexpr ',' expr

  32  elseifexpr :
  33             | ELSEIF expr body elseifexpr

  34  elseexpr : ELSE body
  35           |

  36  body : '{' exprs '}'

state 0
	$accept : . start $end  (0)

	NAME  shift 1
	.  error

	start  goto 2
	program  goto 3
	function  goto 4


state 1
	function : NAME . $$1 '(' optparlist ')' '{' decls exprs '}'  (5)
	$$1 : .  (4)

	.  reduce 4

	$$1  goto 5


state 2
	$accept : start . $end  (0)

	$end  accept


state 3
	start : program .  (1)
	program : program . function  (2)

	NAME  shift 1
	$end  reduce 1

	function  goto 6


state 4
	program : function .  (3)

	.  reduce 3


state 5
	function : NAME $$1 . '(' optparlist ')' '{' decls exprs '}'  (5)

	'('  shift 7
	.  error


state 6
	program : program function .  (2)

	.  reduce 2


state 7
	function : NAME $$1 '(' . optparlist ')' '{' decls exprs '}'  (5)
	optparlist : .  (8)

	NAME  shift 8
	')'  reduce 8

	parlist  goto 9
	optparlist  goto 10


state 8
	parlist : NAME .  (6)

	.  reduce 6


state 9
	parlist : parlist . ',' NAME  (7)
	optparlist : parlist .  (9)

	','  shift 11
	')'  reduce 9


state 10
	function : NAME $$1 '(' optparlist . ')' '{' decls exprs '}'  (5)

	')'  shift 12
	.  error


state 11
	parlist : parlist ',' . NAME  (7)

	NAME  shift 13
	.  error


state 12
	function : NAME $$1 '(' optparlist ')' . '{' decls exprs '}'  (5)

	'{'  shift 14
	.  error


state 13
	parlist : parlist ',' NAME .  (7)

	.  reduce 7


state 14
	function : NAME $$1 '(' optparlist ')' '{' . decls exprs '}'  (5)
	decls : .  (10)

	.  reduce 10

	decls  goto 15


state 15
	function : NAME $$1 '(' optparlist ')' '{' decls . exprs '}'  (5)
	decls : decls . decl ';'  (11)

	NAME  shift 16
	LITERAL  shift 17
	OPNAME  shift 18
	IF  shift 19
	VAR  shift 20
	WHILE  shift 21
	RETURN  shift 22
	'('  shift 23
	.  error

	exprs  goto 24
	expr  goto 25
	binopexpr  goto 26
	smallexpr  goto 27
	decl  goto 28


state 16
	expr : NAME . '=' expr  (17)
	smallexpr : NAME .  (21)
	smallexpr : NAME . '(' optexpr ')'  (22)

	'('  shift 29
	'='  shift 30
	OPNAME  reduce 21
	')'  reduce 21
	'{'  reduce 21
	','  reduce 21
	';'  reduce 21


state 17
	smallexpr : LITERAL .  (24)

	.  reduce 24


state 18
	smallexpr : OPNAME . smallexpr  (23)

	NAME  shift 31
	LITERAL  shift 17
	OPNAME  shift 18
	IF  shift 19
	WHILE  shift 21
	'('  shift 23
	.  error

	smallexpr  goto 32


state 19
	smallexpr : IF . expr body elseifexpr elseexpr  (26)

	NAME  shift 16
	LITERAL  shift 17
	OPNAME  shift 18
	IF  shift 19
	WHILE  shift 21
	RETURN  shift 22
	'('  shift 23
	.  error

	expr  goto 33
	binopexpr  goto 26
	smallexpr  goto 27


state 20
	decl : VAR . NAME  (13)

	NAME  shift 34
	.  error


state 21
	smallexpr : WHILE . expr body  (27)

	NAME  shift 16
	LITERAL  shift 17
	OPNAME  shift 18
	IF  shift 19
	WHILE  shift 21
	RETURN  shift 22
	'('  shift 23
	.  error

	expr  goto 35
	binopexpr  goto 26
	smallexpr  goto 27


state 22
	expr : RETURN . expr  (16)

	NAME  shift 16
	LITERAL  shift 17
	OPNAME  shift 18
	IF  shift 19
	WHILE  shift 21
	RETURN  shift 22
	'('  shift 23
	.  error

	expr  goto 36
	binopexpr  goto 26
	smallexpr  goto 27


state 23
	smallexpr : '(' . expr ')'  (25)

	NAME  shift 16
	LITERAL  shift 17
	OPNAME  shift 18
	IF  shift 19
	WHILE  shift 21
	RETURN  shift 22
	'('  shift 23
	.  error

	expr  goto 37
	binopexpr  goto 26
	smallexpr  goto 27


state 24
	function : NAME $$1 '(' optparlist ')' '{' decls exprs . '}'  (5)
	exprs : exprs . expr ';'  (15)

	NAME  shift 16
	LITERAL  shift 17
	OPNAME  shift 18
	IF  shift 19
	WHILE  shift 21
	RETURN  shift 22
	'('  shift 23
	'}'  shift 38
	.  error

	expr  goto 39
	binopexpr  goto 26
	smallexpr  goto 27


state 25
	exprs : expr . ';'  (14)

	';'  shift 40
	.  error


state 26
	expr : binopexpr .  (18)
	binopexpr : binopexpr . OPNAME smallexpr  (20)

	OPNAME  shift 41
	')'  reduce 18
	'{'  reduce 18
	','  reduce 18
	';'  reduce 18


state 27
	binopexpr : smallexpr .  (19)

	.  reduce 19


state 28
	decls : decls decl . ';'  (11)
	decl : decl . ',' NAME  (12)

	','  shift 42
	';'  shift 43
	.  error


state 29
	smallexpr : NAME '(' . optexpr ')'  (22)
	optexpr : .  (28)

	NAME  shift 16
	LITERAL  shift 17
	OPNAME  shift 18
	IF  shift 19
	WHILE  shift 21
	RETURN  shift 22
	'('  shift 23
	')'  reduce 28

	expr  goto 44
	binopexpr  goto 26
	smallexpr  goto 27
	optexpr  goto 45
	nonemptyoptexpr  goto 46


state 30
	expr : NAME '=' . expr  (17)

	NAME  shift 16
	LITERAL  shift 17
	OPNAME  shift 18
	IF  shift 19
	WHILE  shift 21
	RETURN  shift 22
	'('  shift 23
	.  error

	expr  goto 47
	binopexpr  goto 26
	smallexpr  goto 27


state 31
	smallexpr : NAME .  (21)
	smallexpr : NAME . '(' optexpr ')'  (22)

	'('  shift 29
	OPNAME  reduce 21
	')'  reduce 21
	'{'  reduce 21
	','  reduce 21
	';'  reduce 21


state 32
	smallexpr : OPNAME smallexpr .  (23)

	.  reduce 23


state 33
	smallexpr : IF expr . body elseifexpr elseexpr  (26)

	'{'  shift 48
	.  error

	body  goto 49


state 34
	decl : VAR NAME .  (13)

	.  reduce 13


state 35
	smallexpr : WHILE expr . body  (27)

	'{'  shift 48
	.  error

	body  goto 50


state 36
	expr : RETURN expr .  (16)

	.  reduce 16


state 37
	smallexpr : '(' expr . ')'  (25)

	')'  shift 51
	.  error


state 38
	function : NAME $$1 '(' optparlist ')' '{' decls exprs '}' .  (5)

	.  reduce 5


state 39
	exprs : exprs expr . ';'  (15)

	';'  shift 52
	.  error


state 40
	exprs : expr ';' .  (14)

	.  reduce 14


state 41
	binopexpr : binopexpr OPNAME . smallexpr  (20)

	NAME  shift 31
	LITERAL  shift 17
	OPNAME  shift 18
	IF  shift 19
	WHILE  shift 21
	'('  shift 23
	.  error

	smallexpr  goto 53


state 42
	decl : decl ',' . NAME  (12)

	NAME  shift 54
	.  error


state 43
	decls : decls decl ';' .  (11)

	.  reduce 11


state 44
	nonemptyoptexpr : expr .  (30)

	.  reduce 30


state 45
	smallexpr : NAME '(' optexpr . ')'  (22)

	')'  shift 55
	.  error


state 46
	optexpr : nonemptyoptexpr .  (29)
	nonemptyoptexpr : nonemptyoptexpr . ',' expr  (31)

	','  shift 56
	')'  reduce 29


state 47
	expr : NAME '=' expr .  (17)

	.  reduce 17


state 48
	body : '{' . exprs '}'  (36)

	NAME  shift 16
	LITERAL  shift 17
	OPNAME  shift 18
	IF  shift 19
	WHILE  shift 21
	RETURN  shift 22
	'('  shift 23
	.  error

	exprs  goto 57
	expr  goto 25
	binopexpr  goto 26
	smallexpr  goto 27


state 49
	smallexpr : IF expr body . elseifexpr elseexpr  (26)
	elseifexpr : .  (32)

	ELSEIF  shift 58
	OPNAME  reduce 32
	ELSE  reduce 32
	')'  reduce 32
	'{'  reduce 32
	','  reduce 32
	';'  reduce 32

	elseifexpr  goto 59


state 50
	smallexpr : WHILE expr body .  (27)

	.  reduce 27


state 51
	smallexpr : '(' expr ')' .  (25)

	.  reduce 25


state 52
	exprs : exprs expr ';' .  (15)

	.  reduce 15


state 53
	binopexpr : binopexpr OPNAME smallexpr .  (20)

	.  reduce 20


state 54
	decl : decl ',' NAME .  (12)

	.  reduce 12


state 55
	smallexpr : NAME '(' optexpr ')' .  (22)

	.  reduce 22


state 56
	nonemptyoptexpr : nonemptyoptexpr ',' . expr  (31)

	NAME  shift 16
	LITERAL  shift 17
	OPNAME  shift 18
	IF  shift 19
	WHILE  shift 21
	RETURN  shift 22
	'('  shift 23
	.  error

	expr  goto 60
	binopexpr  goto 26
	smallexpr  goto 27


state 57
	exprs : exprs . expr ';'  (15)
	body : '{' exprs . '}'  (36)

	NAME  shift 16
	LITERAL  shift 17
	OPNAME  shift 18
	IF  shift 19
	WHILE  shift 21
	RETURN  shift 22
	'('  shift 23
	'}'  shift 61
	.  error

	expr  goto 39
	binopexpr  goto 26
	smallexpr  goto 27


state 58
	elseifexpr : ELSEIF . expr body elseifexpr  (33)

	NAME  shift 16
	LITERAL  shift 17
	OPNAME  shift 18
	IF  shift 19
	WHILE  shift 21
	RETURN  shift 22
	'('  shift 23
	.  error

	expr  goto 62
	binopexpr  goto 26
	smallexpr  goto 27


state 59
	smallexpr : IF expr body elseifexpr . elseexpr  (26)
	elseexpr : .  (35)

	ELSE  shift 63
	OPNAME  reduce 35
	')'  reduce 35
	'{'  reduce 35
	','  reduce 35
	';'  reduce 35

	elseexpr  goto 64


state 60
	nonemptyoptexpr : nonemptyoptexpr ',' expr .  (31)

	.  reduce 31


state 61
	body : '{' exprs '}' .  (36)

	.  reduce 36


state 62
	elseifexpr : ELSEIF expr . body elseifexpr  (33)

	'{'  shift 48
	.  error

	body  goto 65


state 63
	elseexpr : ELSE . body  (34)

	'{'  shift 48
	.  error

	body  goto 66


state 64
	smallexpr : IF expr body elseifexpr elseexpr .  (26)

	.  reduce 26


state 65
	elseifexpr : ELSEIF expr body . elseifexpr  (33)
	elseifexpr : .  (32)

	ELSEIF  shift 58
	OPNAME  reduce 32
	ELSE  reduce 32
	')'  reduce 32
	'{'  reduce 32
	','  reduce 32
	';'  reduce 32

	elseifexpr  goto 67


state 66
	elseexpr : ELSE body .  (34)

	.  reduce 34


state 67
	elseifexpr : ELSEIF expr body elseifexpr .  (33)

	.  reduce 33


19 terminals, 18 nonterminals
37 grammar rules, 68 states
